---
- hosts: all
  become: yes
  gather_facts: yes
  vars_files:
  - vault.yml

  handlers:
    - name: restart sshd
      service:
        name: sshd
        state: restarted 

  tasks:

  - name: create and configure a new ansible user
    user:
     name: ansible
     password: "{{ ansible_user_pass | password_hash('sha512') }}"
     update_password: on_create
     shell: /bin/bash
    notify: restart sshd

- hosts: webservers
  become: yes

  handlers:
    - name: restart nginx
      service:
        name: nginx
        state: restarted

  tasks:

  - name: ensure nginx is at the latest version
    apt:
      name: nginx
      state: latest
      update_cache: yes
    when: "ansible_facts['os_family'] == 'Debian'"

  - name: write the nginx index file
    copy:
      src: ./files/index.html
      dest: /var/www/html/index.html
      backup: yes
    when: "ansible_facts['os_family'] == 'Debian'"
    notify: restart nginx 

- hosts: dbservers
  become: yes
  handlers:
    - name: restart postgres
      service:
        name: postgres
        state: restarted   
  
  tasks:

  - name: ensure postgresql and dependencies are at the latest version
    yum:
      name: ['postgresql', 'postgresql-contrib', 'python-psycopg2']
      state: latest
    when: "ansible_facts['os_family'] == 'RedHat'"

  - name: ensure that postgresql is started
    service:
      name: postgresql
      state: started
    when: "ansible_facts['os_family'] == 'RedHat'"

  - name: Ensure databases are created
    postgresql_db: 
      name: "{{ item.name }}"
      lc_collate: "{{ item.collation | default('en_US.UTF-8') }}"
      encoding: "{{ item.encoding | default('UTF-8') }}"
      state: "{{ item.state | default('present') }}"
    with_items: "{{ postgresql_databases }}" 
    when: "ansible_facts['os_family'] == 'RedHat'"
    notify: restart postgresql

  # - name: Ensure user has access to the database
  #   postgresql_user: 
  #     db: "{{ db_name }}"
  #     name: "{{ db_user }}"
  #     password: "{{ db_password }}"
  #     priv: ALL
  #     state: present
  #   when: "ansible_facts['os_family'] == 'RedHat'"
  #   notify: restart postgresql  