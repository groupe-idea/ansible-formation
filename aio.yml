---
- hosts: all
  become: yes
  gather_facts: yes
  vars_files:
  - vault.yml

  handlers:
    - name: restart sshd
      service:
        name: sshd
        state: restarted 

  tasks:

  - name: create and configure a new ansible user
    user:
     name: ansible
     password: "{{ ansible_user_pass | password_hash('sha512') }}"
     update_password: on_create
     shell: /bin/bash
    notify: restart sshd

- hosts: webservers
  become: yes

  handlers:
    - name: restart nginx
      service:
        name: nginx
        state: restarted

  tasks:

  - name: ensure nginx is at the latest version
    apt:
      name: nginx
      state: latest
      update_cache: yes
    when: "ansible_facts['os_family'] == 'Debian'"

  - name: write the nginx index file
    copy:
      src: files/index.html
      dest: /var/www/html/index.html
      backup: yes
    when: "ansible_facts['os_family'] == 'Debian'"
    notify: restart nginx 

- hosts: dbservers
  become: yes
  handlers:
    - name: restart postgresql
      service:
        name: postgresql
        state: restarted   
  vars:
    postgresql_user: postgres
    postgresql_group: postgres
    postgresql_data_dir: "/var/lib/pgsql/data"
    postgresql_bin_path: "/usr/bin"
    postgresql_config_path: "/var/lib/pgsql/data"
  vars_files:
  - vault.yml  

  tasks:

  - name: ensure postgresql and dependencies are at the latest version
    yum:
      name: ['postgresql', 'postgresql-server', 'postgresql-contrib', 'postgresql-libs', 'python-psycopg2']
      state: latest
    when: "ansible_facts['os_family'] == 'RedHat'"

  - name: Check if PostgreSQL database is initialized.
    stat:
      path: "{{ postgresql_data_dir }}/PG_VERSION"
    register: pgdata_dir_version

  - name: Ensure PostgreSQL database is initialized.
    command: "{{ postgresql_bin_path }}/initdb -D {{ postgresql_data_dir }}"
    when: not pgdata_dir_version.stat.exists
    become: true
    become_user: "{{ postgresql_user }}"
    # See: https://github.com/ansible/ansible/issues/16048#issuecomment-229012509
    vars:
      ansible_ssh_pipelining: true   

  - name: ensure that postgresql is started
    service:
      name: postgresql
      state: started
    when: "ansible_facts['os_family'] == 'RedHat'"

  - name: Ensure databases are created
    become: true
    become_user: "{{ postgresql_user }}"
    postgresql_db: 
      name: "{{ item.name }}"
      lc_collate: "{{ item.lc_collate | default('en_US.UTF-8') }}"
      lc_ctype: "{{ item.lc_ctype | default('en_US.UTF-8') }}"
      encoding: "{{ item.encoding | default('UTF-8') }}"
      template: "{{ item.template | default('template0') }}"
      login_host: "{{ item.login_host | default('localhost') }}"
      login_password: "{{ item.login_password | default(omit) }}"
      login_user: "{{ item.login_user | default(postgresql_user) }}"
      port: "{{ item.port | default(omit) }}"
      owner: "{{ item.owner | default(postgresql_user) }}"
      state: "{{ item.state | default('present') }}"
    with_items: "{{ postgresql_databases }}" 
    when: "ansible_facts['os_family'] == 'RedHat'"
     # See: https://github.com/ansible/ansible/issues/16048#issuecomment-229012509
    vars:
      ansible_ssh_pipelining: true   
    notify: restart postgresql

  - name: Ensure user has access to the database
    become: true
    become_user: "{{ postgresql_user }}"
    postgresql_user:
      name: "{{ item.name }}"
      password: "{{ item.password | default(omit) }}"
      encrypted: "{{ item.encrypted | default(omit) }}"
      priv: "{{ item.priv | default(omit) }}"
      role_attr_flags: "{{ item.role_attr_flags | default(omit) }}"
      db: "{{ item.db | default(omit) }}"
      login_host: "{{ item.login_host | default('localhost') }}"
      login_password: "{{ item.login_password | default(omit) }}"
      login_user: "{{ item.login_user | default(postgresql_user) }}"
      port: "{{ item.port | default(omit) }}"
      state: "{{ item.state | default('present') }}"
    with_items: "{{ postgresql_users }}"
     # See: https://github.com/ansible/ansible/issues/16048#issuecomment-229012509
    vars:
      ansible_ssh_pipelining: true  
    when: "ansible_facts['os_family'] == 'RedHat'"
    notify: restart postgresql